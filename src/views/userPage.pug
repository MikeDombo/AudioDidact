extends template.pug
block content
	if emailverify === 1
		div(role="alert").alert.alert-success
			div.alert-text Successfully verified email.
	else if emailverify === 2
		div(role="alert").alert.alert-danger
			div.alert-text Failed to verify email!
	if edit
		include userPageEdit.pug
	else
		include userPageView.pug

block afterJqueryLoad
	script(src="/"+subdir+"public/js/userFeed.js")
	if edit
		link(href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
		integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous")
		link(href="/"+subdir+"public/css/bootstrap-editable.min.css" rel="stylesheet")
		script(src="/"+subdir+"public/js/bootstrap-editable.min.js")
		link(href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet")
		script(src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js")
		script.
			function processSuccess(response){
				var message = JSON.parse(response);
				if(!message.success){
					return message.error;
				}
			}
			function processError(response){
				$('#Error-Modal-Text').text(response);
				$('#Error-Modal').modal({
					show: true
				});
			}
			$(function (){
				$('#privateFeed').bootstrapToggle().change(function (){
					$.post("/#{subdir}updateUser.php", {
						name: "privateFeed", value: $(this).prop('checked')
					}, function (data){
						if(processSuccess(data)){
							processError(processSuccess(data));
						}
					});
				});
			});
			$.fn.editable.defaults.mode = 'inline';
			$(document).ready(function (){
				$("#feedIcoImg").attr("src", $("#feedIco").text());
				var basicOptions = {
					success: function (response, newValue){
						console.log(response);
						console.log(newValue);
						return processSuccess(response);
					},
					error: function (response){
						console.log(response);
						return processError(response);
					}
				};
				var feedOptionArray = {
					success: function (response, newValue){
						var message = JSON.parse(response);
						if(!message.success){
							return message.error;
						}
						$.get("/#{subdir}yt.php", function (data){
						});
					},
					error: function (response){
						console.log(response);
						return processError(response);
					}
				};

				$('#feedTitle').editable(feedOptionArray);
				$('#itunesAuthor').editable(feedOptionArray);
				$('#feedDesc').editable(feedOptionArray);
				$('#feedIco').editable({
					success: function (response, newValue){
						var message = JSON.parse(response);
						if(!message.success){
							return message.error;
						}
						$("#feedIcoImg").attr("src", newValue);
						$.get("/#{subdir}yt.php", function (data){
						});
					},
					error: function (response){
						console.log(response);
						return processError(response);
					}
				});

				$('#webID').editable({
					success: function (response, newValue){
						var message = JSON.parse(response);
						if(!message.success){
							return message.error;
						}
						else{
							window.location = "/#{subdir}" + "user/" + newValue;
						}
					},
					error: function (response){
						console.log(response);
						return processError(response);
					}
				});
				$('#fname').editable(basicOptions);
				$('#lname').editable(basicOptions);
				$('#email').editable(basicOptions);
				$('#feedLen').editable({
					success: function (response, newValue){
						var message = JSON.parse(response);
						if(!message.success){
							return message.error;
						}
						$.get("/#{subdir}yt.php", function (data){
						});
					},
					error: function (response){
						console.log(response);
						return processError(response);
					}
				});
				$('#gender').editable({
					value: #{pageUser.gender},
					source: [
						{value: 1, text: 'Male'},
						{value: 2, text: 'Female'},
						{value: 3, text: 'Other'}
					],
					success: function (response){
						console.log(response);
						return processSuccess(response);
					},
					error: function (response){
						console.log(response);
						return processError(response);
					}
				});
			});
